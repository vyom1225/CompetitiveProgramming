ull power(ull x,int y, int p){
    ull res = 1; 
    x = x % p; 
    while (y > 0) {
        if (y & 1) res = (res * x) % p;
        y = y >> 1; 
        x = (x * x) % p;
    }
    return res;
}

ull modInverse(ull n,int p){
    return power(n, p - 2, p);
}

ull nCr(ull n, int r, int p){
    if (n < r) return 0;
    if (r == 0) return 1;
    ull fac[n + 1];
    fac[0] = 1;
    for (int i = 1; i <= n; i++)
        fac[i] = (fac[i - 1] * i) % p;
    return ((fac[n] * modInverse(fac[r], p) % p) * (modInverse(fac[n - r], p) % p ))% p;
}
